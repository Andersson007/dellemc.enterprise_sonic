#
# -*- coding: utf-8 -*-
# Copyright 2019 Red Hat
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The arg spec for the sonic_bgp module
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type


class BgpArgs(object):  # pylint: disable=R0903
    """The arg spec for the sonic_bgp module
    """

    def __init__(self, **kwargs):
        pass

    argument_spec = {
        'config': {
            'elements': 'dict',
            'options': {
                'address_family': {
                    'elements': 'dict',
                    'options': {
                        'afi': {
                            'choices': ['ipv4', 'ipv6', 'l2vpn'],
                            'required': True,
                            'type': 'str'
                        },
                        'neighbors': {
                            'elements': 'dict',
                            'options': {
                                'activate': {'type': 'bool'},
                                'maximum_prefix': {'type': 'int'},
                                'neighbor': {'required': True, 'type': 'str'},
                                'next_hop_self': {'type': 'bool'},
                                'prefix_list_in': {'type': 'str'},
                                'prefix_list_out': {'type': 'str'},
                                'remove_private_as': {'type': 'bool'},
                                'route_reflector_client': {'type': 'bool'},
                                'route_server_client': {'type': 'bool'}
                            },
                            'type': 'list'
                        },
                        'networks': {
                            'elements': 'dict',
                            'options': {
                                'masklen': {'type': 'int'},
                                'prefix': {'required': True, 'type': 'str'},
                                'route_map': {'type': 'str'}
                            },
                            'type': 'list'
                        },
                        'redistribute': {
                            'elements': 'dict',
                            'options': {
                                'metric': {'type': 'int'},
                                'protocol': {
                                    'choices': ['ospf', 'static', 'connected'],
                                    'required': True,
                                    'type': 'str'
                                },
                                'route_map': {'type': 'str'}
                            },
                            'type': 'list'
                        },
                        'safi': {
                            'choices': ['unicast', 'evpn'],
                            'default': 'unicast',
                            'type': 'str'
                        }
                    },
                    'type': 'list'
                },
                'bgp_as': {'type': 'int'},
                'log_neighbor_changes': {'type': 'bool'},
                'neighbors': {
                    'elements': 'dict',
                    'options': {
                        'advertisement_interval': {'type': 'int'},
                        'description': {'type': 'str'},
                        'ebgp_multihop': {'type': 'int'},
                        'enabled': {'type': 'bool'},
                        'local_as': {'type': 'int'},
                        'neighbor': {'required': True, 'type': 'str'},
                        'password': {'type': 'str'},
                        'peer_group': {'type': 'str'},
                        'remote_as': {'type': 'int'},
                        'timers': {
                            'options': {
                                'holdtime': {'type': 'int'},
                                'keepalive': {'type': 'int'}
                            },
                            'type': 'dict'
                        },
                        'update_source': {'type': 'str'}
                    },
                    'type': 'list'
                },
                'peer_groups': {
                    'options': {
                        'peer_group_name': {'type': 'str'}
                    },
                    'type': 'list',
                    'elements': 'dict'
                },
                'router_id': {'type': 'str'},
                'vrf_name': {'type': 'str', 'default': 'default'}
            },
            'type': 'list'
        },
        'state': {
            'choices': ['merged', 'replaced', 'overridden', 'deleted'],
            'default': 'merged',
            'type': 'str'
        }
    }  # pylint: disable=C0301
