#!/usr/bin/python
# -*- coding: utf-8 -*-
# Â© Copyright 2020 Dell Inc. or its subsidiaries. All Rights Reserved
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for sonic_vrf_interfaces
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type

ANSIBLE_METADATA = {
    'metadata_version': '1.1',
    'status': ['preview'],
    'supported_by': 'community'
}

DOCUMENTATION = """
---
module: sonic_vrf_interfaces
version_added: 2.10
short_description: 'Manages interface attributes of SONiC vrf_interfaces.'
description: 'Manages interface attributes of SONiC vrf_interfaces.'
author: 'Niraimadaiselvam M(@niraimadaiselvam-m)'
notes:
  - 'Tested against SONiC-OS-3.0.1'
options:
  config:
    description: A list of vrf_interfaces configurations.
    type: list
    elements: dict
    suboptions:
      name:
        type: str
        description: The name of the vrf_interface
        required: true
      members:
        type: list
        description: "list of interfaces linked to vrf"
        elements: str
  state:
    description: "The state of the configuration after module completion."
    type: str
    choices:
    - merged
    - deleted
    default: merged
"""
EXAMPLES = """
# Using deleted
#
# Before state:
# -------------
#
#show ip vrf
#VRF-NAME            INTERFACES
#----------------------------------------------------------------
#Vrfcheck1
#Vrfcheck2
#Vrfcheck3           Ethernet12
#                    Ethernet52
#                    Ethernet60
#                    Ethernet64
#Vrfcheck4           Ethernet24
#                    Ethernet28
#
#- name: Configuring vrf_interfaces deleted state
#  sonic_vrf_interfaces:
#    config:
#      - name: Vrfcheck4
#          members:
#            - Ethernet28
#      - name: Vrfcheck3
#          members:
#            - Ethernet12
#            - Ethernet52
#    state: deleted
#
# After state:
# ------------
#
#show ip vrf
#VRF-NAME            INTERFACES
#----------------------------------------------------------------
#Vrfcheck1
#Vrfcheck2
#Vrfcheck3           Ethernet60
#                    Ethernet64
#Vrfcheck4           Ethernet24
#
#
# Using merged
#
# Before state:
# -------------
#
#show ip vrf
#VRF-NAME            INTERFACES
#----------------------------------------------------------------
#Vrfcheck1
#Vrfcheck2
#Vrfcheck3           Ethernet60
#                    Ethernet64
#Vrfcheck4
#
#- name: Configuring vrf_interfaces merged state
#  sonic_vrf_interfaces:
#    config:
#      - name: Vrfcheck4
#          members:
#            - Ethernet24
#            - Ethernet28
#      - name: Vrfcheck3
#          members:
#            - Ethernet12
#            - Ethernet52
#    state: merged
#
# After state:
# ------------
#
#show ip vrf
#VRF-NAME            INTERFACES
#----------------------------------------------------------------
#Vrfcheck1
#Vrfcheck2
#Vrfcheck3           Ethernet12
#                    Ethernet52
#                    Ethernet60
#                    Ethernet64
#Vrfcheck4           Ethernet24
#                    Ethernet28
#
#
# Using merged
#
# Before state:
# -------------
#
#show ip vrf
#VRF-NAME            INTERFACES
#----------------------------------------------------------------
#Vrfcheck1
#Vrfcheck2
#Vrfcheck3           Ethernet60
#                    Ethernet64
#Vrfcheck4           Ethernet24
#                    Ethernet28
#
#- name: Configuring vrf_interfaces merged state
#  sonic_vrf_interfaces:
#    config:
#      - name: Vrfcheck1
#          members:
#            - Ethernet24
#            - Ethernet28
#      - name: Vrfcheck3
#          members:
#            - Ethernet52
#    state: merged
#
# After state:
# ------------
#
#show ip vrf
#VRF-NAME            INTERFACES
#----------------------------------------------------------------
#Vrfcheck1           Ethernet24
#                    Ethernet28
#Vrfcheck2
#Vrfcheck3           Ethernet52
#Vrfcheck4
#
#
"""
RETURN = """
before:
  description: The configuration prior to the model invocation.
  returned: always
  type: list
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
after:
  description: The resulting configuration model invocation.
  returned: when changed
  type: list
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
commands:
  description: The set of commands pushed to the remote device.
  returned: always
  type: list
  sample: ['command 1', 'command 2', 'command 3']
"""


from ansible.module_utils.basic import AnsibleModule
from ansible_collections.dellemc.sonic.plugins.module_utils.network.sonic.argspec.vrf_interfaces.vrf_interfaces import Vrf_interfacesArgs
from ansible_collections.dellemc.sonic.plugins.module_utils.network.sonic.config.vrf_interfaces.vrf_interfaces import Vrf_interfaces


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=Vrf_interfacesArgs.argument_spec,
                           supports_check_mode=True)

    result = Vrf_interfaces(module).execute_module()
    module.exit_json(**result)


if __name__ == '__main__':
    main()
