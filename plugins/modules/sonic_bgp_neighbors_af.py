#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2019 Red Hat
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for sonic_bgp_neighbors_af
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type

ANSIBLE_METADATA = {
    'metadata_version': '1.1',
    'status': ['preview'],
    'supported_by': 'community',
}

DOCUMENTATION = """
---
module: sonic_bgp_neighbors_af
version_added: "2.10"
author: "Niraimadaiselvam M (@niraimadaiselvamm)"
short_description: Configure BGP neighbors address family configurations on SONiC.
description:
  - This module provides configuration management of BGP neighbors addressfamily parameters
    on devices running SONiC.
  - bgp_as, vrf_name and neighbors need be created earlier in the device.
options:
  config:
    description:
      - Specifies the BGP neighbors address family related configuration.
    type: list
    elements: dict
    suboptions:
      bgp_as:
        description:
          - Specifies the BGP Autonomous System (AS) number which is already configured in the device.
        type: str
        required: true
      vrf_name:
        description:
          - Specifies the vrf name which is already configured in the device.
        type: str
        default: 'default'
      neighbors:
        description:
          - Specifies BGP neighbor related configurations in Address Family configuration mode.
        type: list
        elements: dict
        suboptions:
          neighbor:
            description:
              - Neighbor router address which is already configured in the device.
            type: str
            required: True
          address_family:
            description:
              - Specifies BGP address family related configurations.
            type: list
            elements: dict
            suboptions:
              afi:
                description:
                  - Type of address family to configure.
                type: str
                choices:
                  - ipv4
                  - ipv6
                  - l2vpn
                required: True
              safi:
                description:
                  - Specifies the type of cast for the address family.
                type: str
                choices:
                  - unicast
                  - evpn
                default: unicast
              activate:
                description:
                  - Enable the Address Family for this Neighbor.
                type: bool
              allowas_in:
                description:
                  - Specify the allow as in values.
                type: dict
                mutually_exclusive: [['origin','vlaue']]
                suboptions:
                  value:
                    description:
                      - Specify the value of the allowas in.
                    type: int
                  origin:
                    description:
                      - Specify the origin value.
                    type: bool
              route_map:
                description:
                  - Specify the route map.
                type: list
                elements: dict
                suboptions:
                  name:
                    description:
                      - Specify the name of the route map.
                    type: str
                  direction:
                    description:
                      - Specify the direction of the route map.
                    type: str
              route_reflector_client:
                description:
                  - Specify a neighbor as a route reflector client.
                type: bool
              route_server_client:
                description:
                  - Specify a neighbor as a route server client.
                type: bool
  state:
    description:
      - Specifies the operation to be performed on the BGP process configured on the device.
      - In case of merged, the input configuration will be merged with the existing BGP configuration on the device.
      - In case of deleted the existing BGP configuration will be removed from the device.
    default: merged
    type: str
    choices: ['merged', 'deleted']
"""
EXAMPLES = """
# Using deleted
#
# Before state:
# -------------
#
#!
#router bgp 4
# !
# neighbor interface Ethernet12
#  !
#  address-family ipv4 unicast
#   activate
#   allowas-in 4
#   route-map aa in
#   route-map aa out
#   route-reflector-client
#   route-server-client
#   send-community both
#!
#
#- name: delete neighbors address family with specific values
#    sonic_bgp_neighbors_af:
#      config:
#        - bgp_as: 4
#          neighbors:
#            - neighbor: Ethernet12
#              address_family:
#                - afi: ipv4
#                  safi: unicast
#                  allowas_in:
#                    value: 4
#                  route_map:
#                    - name: aa
#                      direction: in
#                    - name: aa
#                      direction: out
#                  route_reflector_client: true
#                  route_server_client: true
#      state: deleted
# After state:
# ------------
#!
#router bgp 4
# !
# neighbor interface Ethernet12
#  !
#  address-family ipv4 unicast
#   send-community both
#!


# Using deleted
#
# Before state:
# -------------
#
#!
#router bgp 4
# !
# neighbor interface Ethernet12
#  !
#  address-family ipv4 unicast
#   activate
#   allowas-in 4
#   route-map aa in
#   route-map aa out
#   route-reflector-client
#   route-server-client
#   send-community both
#!
# neighbor interface Ethernet24
#  !
#  address-family ipv4 unicast
#   activate
#   allowas-in origin
#   send-community both
#!
#
#- name: delete neighbors address family with specific values
#    sonic_bgp_neighbors_af:
#      config:
#      state: deleted
# After state:
# ------------
#!
#router bgp 4
#!


# Using deleted
#
# Before state:
# -------------
#
#!
#router bgp 4
# !
# neighbor interface Ethernet12
#!
#
#- name: Merge neighbors address family with specific values
#    sonic_bgp_neighbors_af:
#      config:
#        - bgp_as: 4
#          neighbors:
#            - neighbor: Ethernet12
#              address_family:
#                - afi: ipv4
#                  safi: unicast
#                  allowas_in:
#                    value: 4
#                  route_map:
#                    - name: aa
#                      direction: in
#                    - name: aa
#                      direction: out
#                  route_reflector_client: true
#                  route_server_client: true
#      state: merged
# After state:
# ------------
#!
#router bgp 4
# !
# neighbor interface Ethernet12
#  !
#  address-family ipv4 unicast
#   activate
#   allowas-in 4
#   route-map aa in
#   route-map aa out
#   route-reflector-client
#   route-server-client
#   send-community both
#!


"""
RETURN = """
before:
  description: The configuration prior to the model invocation.
  returned: always
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
after:
  description: The resulting configuration model invocation.
  returned: when changed
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
commands:
  description: The set of commands pushed to the remote device.
  returned: always
  type: list
  sample: ['command 1', 'command 2', 'command 3']
"""


from ansible.module_utils.basic import AnsibleModule
from ansible_collections.dellemc.sonic.plugins.module_utils.network.sonic.argspec.bgp_neighbors_af.bgp_neighbors_af import Bgp_neighbors_afArgs
from ansible_collections.dellemc.sonic.plugins.module_utils.network.sonic.config.bgp_neighbors_af.bgp_neighbors_af import Bgp_neighbors_af


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=Bgp_neighbors_afArgs.argument_spec,
                           supports_check_mode=True)

    result = Bgp_neighbors_af(module).execute_module()
    module.exit_json(**result)


if __name__ == '__main__':
    main()
