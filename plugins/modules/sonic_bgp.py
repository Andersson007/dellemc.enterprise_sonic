#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2019 Red Hat
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for sonic_bgp
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type

ANSIBLE_METADATA = {
    'metadata_version': '1.1',
    'status': ['preview'],
    'supported_by': 'community',
    'license': 'Apache 2.0'
}

DOCUMENTATION = """
---
module: sonic_bgp
version_added: "2.10"
author: "Dhivya P (@dhivayp)"
short_description: Configure global BGP protocol settings on SONiC.
description:
  - This module provides configuration management of global BGP parameters
    on devices running SONiC
notes:
  - Tested against SONiC Version 3.0.1
options:
  config:
    description:
      - Specifies the BGP related configuration.
    type: list
    elements: dict
    suboptions:
      bgp_as:
        description:
          - Specifies the BGP Autonomous System (AS) number to configure on the device.
        type: int
      vrf_name:
        description:
          - Specifies the VRF instance name.
        type: str
      router_id:
        description:
          - Configures the BGP routing process router-id value.
        type: str
        default: null
      log_neighbor_changes:
        description:
          - Enable/disable logging neighbor up/down and reset reason.
        type: bool
      peer_groups:
        description:
          - Configures Peer Group.
        type: dict
        suboptions:
          peer_group_name:
            description:
              - Specifies BGP peer group name.
            type: str
      neighbors:
        description:
          - Specifies BGP neighbor related configurations.
        type: list
        elements: dict
        suboptions:
          neighbor:
            description:
              - Neighbor router address.
            type: str
            required: True
          remote_as:
            description:
              - Remote AS of the BGP neighbor to configure.
            type: int
          update_source:
            description:
              - Source of the routing updates.
            type: str
          password:
            description:
              - Password to authenticate the BGP peer connection.
            type: str
          enabled:
            description:
              - Administratively shutdown or enable a neighbor.
            type: bool
          description:
            description:
              - Neighbor specific description.
            type: str
          ebgp_multihop:
            description:
              - Specifies the maximum hop count for EBGP neighbors not on directly connected networks.
              - The range is from 1 to 255.
            type: int
          advertisement_interval:
            description:
              - Minimum interval between sending BGP routing updates.
              - The range is from 1 to 600
            type: int
          peer_group:
            description:
              - Name of the peer group that the neighbor is a member of.
            type: str
          timers:
            description:
              - Specifies BGP neighbor timer related configurations.
            type: dict
            suboptions:
              keepalive:
                description:
                  - Frequency (in seconds) with which the device sends keepalive messages to its peer.
                  - The range is from 0 to 65535.
                type: int
              holdtime:
                description:
                  - Interval (in seconds) after not receiving a keepalive message that SONiC declares a peer dead.
                  - The range is from 0 to 65535.
                type: int
          local_as:
            description:
              - The local AS number for the neighbor.
            type: int
      address_family:
        description:
          - Specifies BGP address family related configurations.
        type: list
        elements: dict
        suboptions:
          afi:
            description:
              - Type of address family to configure.
            type: str
            choices:
              - ipv4
              - ipv6
              - l2vpn
            required: True
          safi:
            description:
             - Specifies the type of cast for the address family.
            type: str
            choices:
              - unicast
              - evpn
            default: unicast
          redistribute:
            description:
              - Specifies the redistribute information from another routing protocol.
            type: list
            elements: dict
            suboptions:
              protocol:
                description:
                  - Specifies the protocol for configuring redistribute information.
                type: str
                choices: ['ospf', 'static', 'connected']
                required: True
              metric:
                description:
                  - Specifies the metric for redistributed routes.
                type: int
              route_map:
                description:
                  - Specifies the route map reference.
                type: str
          networks:
            description:
              - Specify Networks to announce via BGP.
              - For operation replace, this option is mutually exclusive with root level networks option.
            type: list
            elements: dict
            suboptions:
              prefix:
                description:
                  - Network ID to announce via BGP.
                type: str
                required: True
              masklen:
                description:
                  - Subnet mask length for the Network to announce(e.g, 8, 16, 24, etc.).
                type: int
              route_map:
                description:
                  - Route map to modify the attributes.
                type: str
          neighbors:
            description:
              - Specifies BGP neighbor related configurations in Address Family configuration mode.
            type: list
            elements: dict
            suboptions:
              neighbor:
                description:
                  - Neighbor router address.
                type: str
                required: True
              route_reflector_client:
                description:
                  - Specify a neighbor as a route reflector client.
                type: bool
              route_server_client:
                description:
                  - Specify a neighbor as a route server client.
                type: bool
              activate:
                description:
                  - Enable the Address Family for this Neighbor.
                type: bool
              remove_private_as:
                description:
                  - Remove the private AS number from outbound updates.
                type: bool
              next_hop_self:
                description:
                  - Enable/disable the next hop calculation for this neighbor.
                type: bool
              maximum_prefix:
                description:
                  - Maximum number of prefixes to accept from this peer.
                  - The range is from 1 to 2147483647.
                type: int
              prefix_list_in:
                description:
                  - Name of ip prefix-list to apply to incoming prefixes.
                type: str
              prefix_list_out:
                description:
                  - Name of ip prefix-list to apply to outgoing prefixes.
                type: str
  state:
    description:
      - Specifies the operation to be performed on the BGP process configured on the device.
      - In case of merged, the input configuration will be merged with the existing BGP configuration on the device.
      - In case of replaced, if there is a diff between the existing configuration and the input configuration, the
        existing configuration will be replaced by the input configuration for every option that has the diff.
      - In case of overridden, all the existing BGP configuration will be removed from the device and replaced with
        the input configuration.
      - In case of deleted the existing BGP configuration will be removed from the device.
    default: merged
    choices: ['merged', 'replaced', 'overridden', 'deleted']
    type: str
"""
EXAMPLES = """
# Using Deleted
#
# Before State
# ------------
#
show runningconfiguration bgp

router bgp 64455
 neighbor 1.1.1.1 remote-as 555
!
router bgp 64456 vrf Vrfcheck1
 no bgp default ipv4-unicast

#- name: remove all bgp from config
#  sonic_bgp:
#    state: deleted

# After State
# ------------
#
#show runningconfiguration bgp



# Using merged
#
# Before state:
# ------------
#

#- name: configure global bgp as 64496
#  sonic_bgp:
#    config:
#      - bgp_as: 64496
#        router_id: 192.0.2.1
#        log_neighbor_changes: True
#        neighbors:
#          - neighbor: 203.0.113.5
#            remote_as: 64511
#            timers:
#              keepalive: 300
#              holdtime: 360
#        address_family:
#          - afi: ipv4
#            safi: unicast
#            redistribute:
#              - protocol: ospf
#                metric: 10
#            networks:
#              - prefix: 198.51.100.0
#                masklen: 23
#                route_map: RMAP_1
#    state: merged
#
# After state
# -----------
# show runningconfiguration bgp
#router bgp 64496
# router-id 192.0.2.1
# log-neighbor-changes
# neighbor 203.0.113.5 remote-as 64511
# neighbor 203.0.113.5 timers 120 360
# !
# address-family ipv4 unicast
#  network 198.51.100.0/23 route-map RMAP_1
#  redistribute ospf metric 10
# exit-address-family
#!

#- name: Configure BGP neighbors
#  sonic_bgp:
#    config:
#      - bgp_as: 64496
#        peer_groups:
#          - peer_group_name: test_peer_group
#        neighbors:
#          - neighbor: 192.0.2.10
#            remote_as: 64496
#            password: ansible
#            description: IBGP_NBR_1
#            peer_group: test_peer_group
#            ebgp_multihop: 100
#            timers:
#              keepalive: 300
#              holdtime: 360
#          - neighbor: 192.0.2.15
#            remote_as: 64496
#            description: IBGP_NBR_2
#            update_source: 192.0.2.1/23
#            enabled: true
#            local_as: 64496
#    state: merged
#
# After state
# -----------
#
#router bgp 64496
# router-id 192.0.2.1
# log-neighbor-changes
# neighbor 192.0.2.10 remote-as 64496
# neighbor 192.0.2.10 description IBGP_NBR_1
# neighbor 192.0.2.10 password 73bf9be72 encrypted
# neighbor 192.0.2.10 timers 120 360
# neighbor 192.0.2.15 remote-as 64496
# neighbor 192.0.2.15 description IBGP_NBR_2
# neighbor 192.0.2.15 activate
# neighbor 192.0.2.15 local-as 64496
# neighbor 192.0.2.15 update-source 192.0.2.1/23
# neighbor 203.0.113.5 remote-as 64511
# neighbor 203.0.113.5 timers 120 360
# !
# address-family ipv4 unicast
#  network 198.51.100.0/23 route-map RMAP_1
#  redistribute ospf metric 10
# exit-address-family
#!
#route-map test_peer_group permit 1
#!
#
#- name: Configure BGP neighbors under address family mode
#  sonic_bgp:
#    config:
#      - bgp_as: 64496
#        address_family:
#          - afi: ipv4
#            safi: unicast
#            neighbors:
#              - neighbor: 203.0.113.5
#                activate: yes
#                maximum_prefix: 250
#                prefix_list_in: pfx_list_in
#                prefix_list_out: pfx_list_out
#              - neighbor: 192.0.2.15
#                activate: yes
#                route_reflector_client: True
#                route_server_client: True
#                remove_private_as: True
#                next_hop_self: True
#    state: merged
#
# After state
# -----------
#
#router bgp 64496
# router-id 192.0.2.1
# log-neighbor-changes
# neighbor 192.0.2.10 remote-as 64496
# neighbor 192.0.2.10 description IBGP_NBR_1
# neighbor 192.0.2.10 password 73bf9be72 encrypted
# neighbor 192.0.2.10 timers 120 360
# neighbor 192.0.2.15 remote-as 64496
# neighbor 192.0.2.15 description IBGP_NBR_2
# neighbor 192.0.2.15 local-as 64496
# neighbor 203.0.113.5 remote-as 64511
# neighbor 203.0.113.5 timers 120 360
# !
# address-family ipv4 unicast
#  network 198.51.100.0/23 route-map RMAP_1
#  neighbor 192.0.2.15 activate
#  neighbor 192.0.2.15 update-source 192.0.2.1/23
#  neighbor 192.0.2.15 route-reflector-client
#  neighbor 192.0.2.15 route-server-client
#  neighbor 192.0.2.15 remove-private-AS
#  neighbor 192.0.2.15 next-hop-self
#  neighbor 203.0.113.5 activate
#  neighbor 203.0.113.5 maximum-prefix
#  neighbor 203.0.113.5 prefix-list pfx_list_in in
#  neighbor 203.0.113.5 prefix-list pfx_list_out out
#  redistribute ospf metric 10
# exit-address-family
#!
#route-map test_peer_group permit 1
#!
#
#
#
"""
RETURN = """
before:
  description: The configuration prior to the model invocation.
  returned: always
  type: list
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
after:
  description: The resulting configuration model invocation.
  returned: when changed
  type: list
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
commands:
  description: The set of commands pushed to the remote device.
  returned: always
  type: list
  sample: ['command 1', 'command 2', 'command 3']
"""


from ansible.module_utils.basic import AnsibleModule
from ansible_collections.dellemc.sonic.plugins.module_utils.network.sonic.argspec.bgp.bgp import BgpArgs
from ansible_collections.dellemc.sonic.plugins.module_utils.network.sonic.config.bgp.bgp import Bgp


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=BgpArgs.argument_spec,
                           supports_check_mode=True)

    result = Bgp(module).execute_module()
    module.exit_json(**result)


if __name__ == '__main__':
    main()
