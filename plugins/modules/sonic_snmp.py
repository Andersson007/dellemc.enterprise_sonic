#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2020 Dell Inc. or its subsidiaries. All Rights Reserved
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for sonic_snmp
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type

ANSIBLE_METADATA = {
    'metadata_version': '1.0',
    'status': ['preview'],
    'supported_by': 'community',
    'license': 'Apache 2.0'
}

DOCUMENTATION = """
---
module: sonic_snmp
version_added: 2.10
short_description: 'Manages snmp attributes on SONiC.'
description: 'This module provides configuration management of SNMP parameters on devices running SONiC'
author: "Kumaraguru Narayanan (@nkumaraguru)"
notes:
  - 'Tested against SONiC Version 3.0.1'
options:
  config:
    description: A dictionary of snmp configurations
    type: list
    elements: dict
    suboptions:
      community:
        type: str
        description: The name or community of the snmp
        required: true
      access:
        type: str
        description: The securityName of this community ex.:ro, rw
        required: false
        choices:
        - ro
        - rw
  state:
    description: The state the configuration should be left in
    type: str
    choices:
    - merged
    - replaced
    - overridden
    - deleted
    default: merged
"""
EXAMPLES = """
# Using deleted

# Before state:
# -------------
#
#rno-dctor-1ar01c01sw02# show snmp-server community
#
#         Community Name                     Group Name
#-------------------------------- --------------------------------
#private                          ro
#public                           ro
#
- name: Delete a single SNMP community
  sonic_snmp:
    config:
      - index: "private"
        securityName: "ro"
    state: delete

# After state:
# ------------
#
#rno-dctor-1ar01c01sw02# show snmp-server community
#
#         Community Name                     Group Name
#-------------------------------- --------------------------------
#public                           ro
#


# Using deleted

# Before state:
# -------------
#
#rno-dctor-1ar01c01sw02# show snmp-server community
#
#         Community Name                     Group Name
#-------------------------------- --------------------------------
#private                          ro
#public                           ro
#

- name: Delete all SNMP communities
  sonic_snmp:
    state: deleted

# After state:
# ------------
#
#rno-dctor-1ar01c01sw02# show snmp-server community
#rno-dctor-1ar01c01sw02#
#


# Using merged

# Before state:
# -------------
#
#rno-dctor-1ar01c01sw02# show snmp-server community
#
#         Community Name                     Group Name
#-------------------------------- --------------------------------
#private                          ro
#public                           ro
#

- name: Merge a single SNMP community
  sonic_snmp:
    config:
      - community: "public123"
        access: "ro"
    state: merged

# After state:
# ------------
#
#rno-dctor-1ar01c01sw02# show snmp-server community
#
#         Community Name                     Group Name
#-------------------------------- --------------------------------
#private                          ro
#public                           ro
#public123                        ro
#


# Using overridden

# Before state:
# -------------
#
#rno-dctor-1ar01c01sw02# show snmp-server community
#
#         Community Name                     Group Name
#-------------------------------- --------------------------------
#private                          ro
#public                           ro
#

- name: Override device configuration of all SNMP communities with provided configuration
  sonic_snmp:
    config:
      - community: "public123"
        access: "ro"
    state: overridden

# After state:
# ------------
#
#rno-dctor-1ar01c01sw02# show snmp-server community
#
#         Community Name                     Group Name
#-------------------------------- --------------------------------
#public123                        ro
#


# Using replaced

# Before state:
# -------------
#
#rno-dctor-1ar01c01sw02# show snmp-server community
#
#         Community Name                     Group Name
#-------------------------------- --------------------------------
#private                          ro
#public                           ro
#

- name: Replace a SNMP community
  sonic_snmp:
    config:
      - community: "public"
        access: "rw"
    state: replaced

# After state:
# ------------
#
#rno-dctor-1ar01c01sw02# show snmp-server community
#
#         Community Name                     Group Name
#-------------------------------- --------------------------------
#private                          ro
#public                           rw
#


"""
RETURN = """
before:
  description: The configuration prior to the model invocation.
  returned: always
  type: list
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
after:
  description: The resulting configuration model invocation.
  returned: when changed
  type: list
  sample: >
    The configuration returned will always be in the same format
     of the parameters above.
commands:
  description: The set of commands pushed to the remote device.
  returned: always
  type: list
  sample: ['command 1', 'command 2', 'command 3']
"""


from ansible.module_utils.basic import AnsibleModule
from ansible_collections.dellemc.sonic.plugins.module_utils.network.sonic.argspec.snmp.snmp import SnmpArgs
from ansible_collections.dellemc.sonic.plugins.module_utils.network.sonic.config.snmp.snmp import Snmp


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=SnmpArgs.argument_spec,
                           supports_check_mode=True)

    result = Snmp(module).execute_module()
    module.exit_json(**result)


if __name__ == '__main__':
    main()
